{"ast":null,"code":"var _jsxFileName = \"/Users/kaylabell/Desktop/pawpals/src/context.js\";\nimport React, { Component } from \"react\"; //import items from \"./data\";\n\nimport Client from \"./Contentful\"; //Client.getEntries({\n// content_type: \"beachResortRoomExample\",\n//}).then((response) => console.log(response.items));\n\nconst RoomContext = React.createContext(); // <RoomContext.Provider value = {'hello}\n\nexport default class RoomProvider extends Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      rooms: [],\n      sortedRooms: [],\n      featuredRooms: [],\n      loading: true,\n      type: \"all\",\n      capacity: 1,\n      price: 0,\n      minPrice: 0,\n      maxPrice: 0,\n      minSize: 0,\n      maxSize: 0,\n      breakfast: false,\n      pets: false\n    };\n\n    this.getData = async () => {\n      try {\n        let response = await Client.getEntries({\n          content_type: \"beachResortRoomExample\"\n        });\n        let rooms = this.formatData(response.items);\n        let featuredRooms = rooms.filter(room => room.featured === true);\n        let maxPrice = Math.max(...rooms.map(item => item.price));\n        let maxSize = Math.max(...rooms.map(item => item.size));\n        this.setState({\n          rooms,\n          featuredRooms,\n          sortedRooms: rooms,\n          loading: false,\n          price: maxPrice,\n          maxPrice,\n          maxSize\n        });\n      } catch (error) {\n        console.log(error);\n      }\n    };\n\n    this.getRoom = slug => {\n      let tempRooms = [...this.state.rooms];\n      const room = tempRooms.find(room => room.slug === slug);\n      return room;\n    };\n\n    this.handleChange = event => {\n      const target = event.target;\n      const value = target.type === \"checkbox\" ? target.checked : target.value;\n      const name = target.name;\n      this.setState({\n        [name]: value\n      }, this.filterRooms); //console.log(`this is ${type}, this is ${name}, $value`);\n    };\n\n    this.filterRooms = () => {\n      let {\n        rooms,\n        type,\n        capacity,\n        price,\n        minSize,\n        maxSize,\n        breakfast,\n        pets\n      } = this.state; //all the rooms\n\n      let tempRooms = [...rooms]; //transform values\n\n      capacity = parseInt(capacity);\n      price = parseInt(price); //filter by type\n\n      if (type !== \"all\") {\n        tempRooms = tempRooms.filter(room => room.type === type);\n      } //filter by capacity\n\n\n      if (capacity !== 1) {\n        tempRooms = tempRooms.filter(room => room.capacity >= capacity);\n      } //filter by price\n\n\n      tempRooms = tempRooms.filter(room => room.price <= price); //filter by size\n\n      tempRooms = tempRooms.filter(room => room.size >= minSize && room.size <= maxSize); //filter by breakfast\n\n      if (breakfast) {\n        tempRooms = tempRooms.filter(room => room.breakfast === true);\n      } //filter by pets\n\n\n      if (pets) {\n        tempRooms = tempRooms.filter(room => room.pets === true);\n      } //change state\n\n\n      this.setState({\n        sortedRooms: tempRooms\n      });\n    };\n  }\n\n  componentDidMount() {\n    this.getData;\n  }\n\n  formatData(items) {\n    let tempItems = items.map(item => {\n      let id = item.sys.id;\n      let images = item.fields.images.map(image => image.fields.file.url);\n      let room = { ...item.fields,\n        images,\n        id\n      };\n      return room;\n    });\n    return tempItems;\n  }\n\n  render() {\n    return /*#__PURE__*/React.createElement(RoomContext.Provider, {\n      value: { ...this.state,\n        getRoom: this.getRoom,\n        handleChange: this.handleChange\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 139,\n        columnNumber: 7\n      }\n    }, this.props.children);\n  }\n\n}\nconst RoomConsumer = RoomContext.Consumer;\nexport function withRoomConsumer(Component) {\n  return function ConsumerWrapper(props) {\n    return /*#__PURE__*/React.createElement(RoomConsumer, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 157,\n        columnNumber: 7\n      }\n    }, value => /*#__PURE__*/React.createElement(Component, Object.assign({}, props, {\n      context: value,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 158,\n        columnNumber: 21\n      }\n    })));\n  };\n}\nexport { RoomProvider, RoomConsumer, RoomContext };","map":{"version":3,"sources":["/Users/kaylabell/Desktop/pawpals/src/context.js"],"names":["React","Component","Client","RoomContext","createContext","RoomProvider","state","rooms","sortedRooms","featuredRooms","loading","type","capacity","price","minPrice","maxPrice","minSize","maxSize","breakfast","pets","getData","response","getEntries","content_type","formatData","items","filter","room","featured","Math","max","map","item","size","setState","error","console","log","getRoom","slug","tempRooms","find","handleChange","event","target","value","checked","name","filterRooms","parseInt","componentDidMount","tempItems","id","sys","images","fields","image","file","url","render","props","children","RoomConsumer","Consumer","withRoomConsumer","ConsumerWrapper"],"mappings":"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","sourcesContent":["import React, { Component } from \"react\";\n//import items from \"./data\";\n\nimport Client from \"./Contentful\";\n//Client.getEntries({\n// content_type: \"beachResortRoomExample\",\n//}).then((response) => console.log(response.items));\n\nconst RoomContext = React.createContext();\n// <RoomContext.Provider value = {'hello}\n\nexport default class RoomProvider extends Component {\n  state = {\n    rooms: [],\n    sortedRooms: [],\n    featuredRooms: [],\n    loading: true,\n    type: \"all\",\n    capacity: 1,\n    price: 0,\n    minPrice: 0,\n    maxPrice: 0,\n    minSize: 0,\n    maxSize: 0,\n    breakfast: false,\n    pets: false,\n  };\n  // get data\n  getData = async () => {\n    try {\n      let response = await Client.getEntries({\n        content_type: \"beachResortRoomExample\",\n      });\n      let rooms = this.formatData(response.items);\n      let featuredRooms = rooms.filter((room) => room.featured === true);\n      let maxPrice = Math.max(...rooms.map((item) => item.price));\n      let maxSize = Math.max(...rooms.map((item) => item.size));\n\n      this.setState({\n        rooms,\n        featuredRooms,\n        sortedRooms: rooms,\n        loading: false,\n        price: maxPrice,\n        maxPrice,\n        maxSize,\n      });\n    } catch (error) {\n      console.log(error);\n    }\n  };\n\n  componentDidMount() {\n    this.getData;\n  }\n\n  formatData(items) {\n    let tempItems = items.map((item) => {\n      let id = item.sys.id;\n      let images = item.fields.images.map((image) => image.fields.file.url);\n\n      let room = { ...item.fields, images, id };\n      return room;\n    });\n    return tempItems;\n  }\n\n  getRoom = (slug) => {\n    let tempRooms = [...this.state.rooms];\n    const room = tempRooms.find((room) => room.slug === slug);\n    return room;\n  };\n\n  handleChange = (event) => {\n    const target = event.target;\n    const value = target.type === \"checkbox\" ? target.checked : target.value;\n    const name = target.name;\n    this.setState(\n      {\n        [name]: value,\n      },\n      this.filterRooms\n    );\n\n    //console.log(`this is ${type}, this is ${name}, $value`);\n  };\n\n  filterRooms = () => {\n    let {\n      rooms,\n      type,\n      capacity,\n      price,\n      minSize,\n      maxSize,\n      breakfast,\n      pets,\n    } = this.state;\n    //all the rooms\n    let tempRooms = [...rooms];\n    //transform values\n    capacity = parseInt(capacity);\n    price = parseInt(price);\n    //filter by type\n\n    if (type !== \"all\") {\n      tempRooms = tempRooms.filter((room) => room.type === type);\n    }\n\n    //filter by capacity\n\n    if (capacity !== 1) {\n      tempRooms = tempRooms.filter((room) => room.capacity >= capacity);\n    }\n    //filter by price\n    tempRooms = tempRooms.filter((room) => room.price <= price);\n    //filter by size\n    tempRooms = tempRooms.filter(\n      (room) => room.size >= minSize && room.size <= maxSize\n    );\n    //filter by breakfast\n    if (breakfast) {\n      tempRooms = tempRooms.filter((room) => room.breakfast === true);\n    }\n    //filter by pets\n    if (pets) {\n      tempRooms = tempRooms.filter((room) => room.pets === true);\n    }\n\n    //change state\n\n    this.setState({\n      sortedRooms: tempRooms,\n    });\n  };\n\n  render() {\n    return (\n      <RoomContext.Provider\n        value={{\n          ...this.state,\n          getRoom: this.getRoom,\n          handleChange: this.handleChange,\n        }}\n      >\n        {this.props.children}\n      </RoomContext.Provider>\n    );\n  }\n}\n\nconst RoomConsumer = RoomContext.Consumer;\n\nexport function withRoomConsumer(Component) {\n  return function ConsumerWrapper(props) {\n    return (\n      <RoomConsumer>\n        {(value) => <Component {...props} context={value} />}\n      </RoomConsumer>\n    );\n  };\n}\n\nexport { RoomProvider, RoomConsumer, RoomContext };\n"]},"metadata":{},"sourceType":"module"}